[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Behavorial Experiments with oTree and Python",
    "section": "",
    "text": "oTree is an open-source and online software for implementing interactive experiments in the laboratory, online, the field or combinations thereof. The basic experimental setup in oTree consists of (i) an experiment written within oTree, (ii) a server computer, which can be a cloud server or a local laptop and (iii) subjects’ devices with a web browser. oTree creates an experimental session on the server, as well as links for all the participants and the experimenter.\noTree is a framework based on Python that lets you build:\n\nMultiplayer strategy games, like the prisoner’s dilemma, public goods game, and auctions\nControlled behavioral experiments in economics, psychology, and related fields\nSurveys and quizzes\n\nThis tutorial will use Python to develop the experiment by using oTree software. For Python code generation, we will use Pycharm Professional software."
  },
  {
    "objectID": "chapter_1.html",
    "href": "chapter_1.html",
    "title": "1  Installation and environments",
    "section": "",
    "text": "Before installing oTree, it is required to have Python installed in your environment to run oTree.\nOpen the python website and install Python3 for your OS from this website:\nhttps://www.python.org/\nChoose the most recent version of Python"
  },
  {
    "objectID": "chapter_1.html#install-pip",
    "href": "chapter_1.html#install-pip",
    "title": "1  Installation and environments",
    "section": "1.2 Install pip",
    "text": "1.2 Install pip\nIf your Python environment does not have pip installed, you can install pip by following this instructions\n\nhttps://pip.pypa.io/en/stable/installation/"
  },
  {
    "objectID": "chapter_1.html#install-pycharm",
    "href": "chapter_1.html#install-pycharm",
    "title": "1  Installation and environments",
    "section": "1.3 Install Pycharm",
    "text": "1.3 Install Pycharm\n\nPyCharm is a famous Python IDE (Integrated Development Environment). We recommend you to use PyCharm if you want to further customize your oTree app by programming. Please go to this website to download the installation package. For oTree development, a free community version should be sufficient.\nhttps://www.jetbrains.com/help/pycharm/installation-guide.html\nThere are different version of Pycharm. I recommend to install the Pycharm professional because it has better syntax highlighting. To have the professional version for academic use, you need to have an academic email address.\nAlternatively you can install the community version of Pycharm which is free of charge."
  },
  {
    "objectID": "chapter_1.html#run-pycharm",
    "href": "chapter_1.html#run-pycharm",
    "title": "1  Installation and environments",
    "section": "1.4 Run Pycharm",
    "text": "1.4 Run Pycharm\n\nCreate a new Pycharm project. Choose pure python. Give a name of the project. Pycharm will create the project for you."
  },
  {
    "objectID": "chapter_1.html#install-otree",
    "href": "chapter_1.html#install-otree",
    "title": "1  Installation and environments",
    "section": "1.6 Install oTree",
    "text": "1.6 Install oTree\n\noTree can be installed through pip. Open the terminal (Mac/Linux) or command prompt (Windows PowerShell) and type:\n\npip3 install otree\n\nYou can install oTree in your computer by using the terminal in Pycharm as well.\n\npip3 install otree\n\n1.6.1 Upgrading/reinstalling oTree\npip3 install -U otree\n\nRecommend upgrading every couple of weeks.\n\n\n\n1.6.2 Regarding the installation of oTree in Linux\n\nYou might need to do the proxy server settings\nIn the Pycharm, you can open the terminal and install oTree as below:\n\nset https_proxy http://proxy.noc.kochi-tech.ac.jp:3128\npip install otree"
  },
  {
    "objectID": "chapter_1.html#otree-setup",
    "href": "chapter_1.html#otree-setup",
    "title": "1  Installation and environments",
    "section": "1.7 oTree setup",
    "text": "1.7 oTree setup\n\nFrom your command prompt, create your IGG project\n\notree startproject IGG\n\nMove into the folder you just created\n\ncd IGG\n\nRun the server\n\notree devserver\n\nOpen your browser to http://localhost:8000/. You should see the oTree demo site.\nTo stop the server, press Control+C at your command line.\nTo create a new app, run\n\notree startapp app_name\n\nSession configs are defined in settings.py"
  },
  {
    "objectID": "chapter_2.html",
    "href": "chapter_2.html",
    "title": "2  Structure of an oTree project",
    "section": "",
    "text": "One app can be an experiment or a part of experiment. A project is collection of all different types of App.\nIf your experiment consist of a prisoner’s dilemma game and a survey, then you need to create two apps, one app for prisoners dilemma and another app is for survey.\nLater you can combine these two apps and run one session.\nApp is like one experiment and project is like a container of different experiments.\nHow you structure the projects is up to you. You can choose the sequence.\nNow if you see the structure of the examples, you can see that there are various different types of folder.\nThe following two folders are known as global settings as they are same level of the project\n\n\n_Static\n\n\nImages, sounds, videos\n\n\n_Template\n\n\nDesign how web page look like. If you want a specific style of your webpage, you can include a template\n\n\nsettings.py\n\n\nIt is also global option. From this setting file, you can change various global options, for instance Your currency, language, interface\nIn this setting.py file you will find the session_configs where you can setup the sequence of apps for your project."
  },
  {
    "objectID": "chapter_2.html#how-to-create-a-new-app.",
    "href": "chapter_2.html#how-to-create-a-new-app.",
    "title": "2  Structure of an oTree project",
    "section": "2.2 How to create a new app.",
    "text": "2.2 How to create a new app.\n\nNavigate your working folder by using cd\nFor instance you are using the project IGG. Then use\n\ncd IGG \nTo navigate in this folder\n\nNow you can create a new app from the terminal.\n\nIf you want to create a app, name “SVO”\notree startapp SVO\n\nYou will notice that a new app named “SVO” is listed on your Pycharm\nIf you don’t see a models.py in each folder, that means you are using the new no-self format.\nIf you open the app, you can see that it contains three different types of files:\n\ninit.py\nMyPage.html\nResults.html\n\n\nIf you open the init.py you can find several different class.\nYou can edit it based on your game. Two most important classes are:\n\nclass (Constants)\nclass (Player)\n\nEverything we want to analyze and store in data should be stored in Player."
  },
  {
    "objectID": "chapter_3.html",
    "href": "chapter_3.html",
    "title": "3  Building blocks of apps in oTree",
    "section": "",
    "text": "To create an application named game_app move to the oTree folder\n\ncd oTree\n\nCreate the application\n\notree startapp game_app\n\nMove to the folder game_app\nIn this folder, you will find the following files as default\nIn this folder, you will also find a sub folder\n\n\ntemplates/game_app\n\nMypage.html\nResults.html"
  },
  {
    "objectID": "chapter_3.html#models.py",
    "href": "chapter_3.html#models.py",
    "title": "3  Building blocks of apps in oTree",
    "section": "3.3 Models.py",
    "text": "3.3 Models.py\nA model is basically a database. Here we define the structure of the data. For instance, in a three data models. This is python class\n\nSub session\nGroup\nPlayer\n\n\nclass Subsession(BaseSubsession):\n\npass\n\nclass Group(BaseGroup):\n\npass\n\nclass Player(BasePlayer):\n\npass"
  },
  {
    "objectID": "chapter_3.html#pages.py",
    "href": "chapter_3.html#pages.py",
    "title": "3  Building blocks of apps in oTree",
    "section": "3.4 Pages.py",
    "text": "3.4 Pages.py\n\nPages that the participants see are defined in pages.py\nLogic for how to display the HTML templates\nwhen, how, and what to display\npage_sequence gives the order of pages\nIf there are multiple rounds the sequence is repeated\n\nFor instance,\n\nclass MyPage(Page):\npass\nclass ResultsWaitPage(WaitPage):\ndef after_all_players_arrive(self):\npass\nclass Results(Page):\npass\n\n\npage_sequence = [MyPage, ResultsWaitPage, Results]"
  },
  {
    "objectID": "chapter_4.html",
    "href": "chapter_4.html",
    "title": "4  Pycharm to customize oTree Studio project",
    "section": "",
    "text": "oTree Studio is a point-and-click interface for building oTree apps. It is free to use for small/medium sized projects."
  },
  {
    "objectID": "chapter_4.html#create-project-by-otree-hub",
    "href": "chapter_4.html#create-project-by-otree-hub",
    "title": "4  Pycharm to customize oTree Studio project",
    "section": "4.1 Create project by oTree Hub",
    "text": "4.1 Create project by oTree Hub\n\nIf you are a new, it is recommended to use oTree Studio to create and edit the project instead of hard coding. Please click this link to register an account then login.\nhttps://www.otreehub.com/accounts/login/?next=/studio/\nClick the “+ Project” button to create a new project.\nThen you’re able to visit the project configuration page where you can config the metadata for your project.\nGo to the “download” and click the “Download .otreezip” button to download the project."
  },
  {
    "objectID": "chapter_4.html#pycharm-to-customize-the-project",
    "href": "chapter_4.html#pycharm-to-customize-the-project",
    "title": "4  Pycharm to customize oTree Studio project",
    "section": "4.2 PyCharm to customize the project",
    "text": "4.2 PyCharm to customize the project\n\nAfter creating and customizing your project on oTree Studio, you can also further customize your project using PyCharm or other IDE. First, you need to unpack your downloaded .otreezip file. To do this, run:\n\notree unzip xx.otreezip\n\nThe command will produce a folder with an identical name. Use PyCharm to open that folder.\nThen, you can add python code to further customize the project. After adding your code, run the following command to re-pack the project into the .otreezip file:\n\notree zip"
  },
  {
    "objectID": "chapter_4.html#host-the-app-locally",
    "href": "chapter_4.html#host-the-app-locally",
    "title": "4  Pycharm to customize oTree Studio project",
    "section": "4.3 Host the App locally",
    "text": "4.3 Host the App locally\n\nOpen a terminal/Command Prompt on your computer and change the working directory to where you store your previously downloaded project file. Execute the following command to start an oTree test server:\n\notree zipserver\n\nThen, you can open http://localhost:8000/ in your browser to test your project out."
  },
  {
    "objectID": "chapter_5.html",
    "href": "chapter_5.html",
    "title": "5  On Heroku from oTree",
    "section": "",
    "text": "Go to your Heroku dashboard and click “Create new app”."
  },
  {
    "objectID": "chapter_1.html#github",
    "href": "chapter_1.html#github",
    "title": "1  Installation and environments",
    "section": "1.5 GitHub",
    "text": "1.5 GitHub\nMake sure you have some kind of version control, I use GitHub. If you crash your code, you can always go back to a previous version of the code."
  },
  {
    "objectID": "chapter_1.html#regarding-the-installation-of-otree-in-linux-fedora-or-ubuntu",
    "href": "chapter_1.html#regarding-the-installation-of-otree-in-linux-fedora-or-ubuntu",
    "title": "1  Installation and environments",
    "section": "1.7 Regarding the installation of oTree in Linux (Fedora or Ubuntu),",
    "text": "1.7 Regarding the installation of oTree in Linux (Fedora or Ubuntu),\n\nYou need to do the proxy server settings\nIn the Pycharm, you can open the terminal and install oTree as below:\n\nset https_proxy http://proxy.noc.kochi-tech.ac.jp:3128\npip install otree"
  },
  {
    "objectID": "chapter_1.html#regarding-the-installation-of-otree-in-linux",
    "href": "chapter_1.html#regarding-the-installation-of-otree-in-linux",
    "title": "1  Installation and environments",
    "section": "1.7 Regarding the installation of oTree in Linux",
    "text": "1.7 Regarding the installation of oTree in Linux\n\nYou might need to do the proxy server settings\nIn the Pycharm, you can open the terminal and install oTree as below:\n\nset https_proxy http://proxy.noc.kochi-tech.ac.jp:3128\npip install otree"
  },
  {
    "objectID": "chapter_3.html#building-blocks",
    "href": "chapter_3.html#building-blocks",
    "title": "3  Building blocks of apps in oTree",
    "section": "3.2 Building blocks",
    "text": "3.2 Building blocks\n\n3.2.1 init.py\n\nUsed to define every variable that you use in your experimet.\nUsed to determine what is showed, when,and how long\n\n\n\n3.2.2 Templates\n\nEvery page in your experiment is a template with text and layout\n\n\n\n3.2.3 Settings.py\n\nUsed to determine payoff structure and general application setting"
  },
  {
    "objectID": "chapter_3.html#init.py-1",
    "href": "chapter_3.html#init.py-1",
    "title": "3  Building blocks of apps in oTree",
    "section": "3.3 init.py",
    "text": "3.3 init.py\n\nclass Subsession(BaseSubsession):\n\npass\n\nclass Group(BaseGroup):\n\npass\n\nclass Player(BasePlayer):\n\npass\n\n\n\nPages that the participants see are defined in pages.py\nLogic for how to display the HTML templates\nwhen, how, and what to display\npage_sequence gives the order of pages\nIf there are multiple rounds the sequence is repeated\n\nFor instance,\n\nclass MyPage(Page):\npass\nclass ResultsWaitPage(WaitPage):\ndef after_all_players_arrive(self):\npass\nclass Results(Page):\npass\n\n\npage_sequence = [MyPage, ResultsWaitPage, Results]"
  }
]